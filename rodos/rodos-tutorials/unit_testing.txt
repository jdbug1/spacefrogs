
RODOS Unit Testing Tutorial


Running existing unit tests

You have to set two CMake variables:
* Set UNIT_TESTING_ENABLED to TRUE (i. e. enable it in CCMake or CMake GUI)
* Set GTEST_SOURCE_DIR to the absolute file path to Google Test source code.
  You can download it at https://code.google.com/p/googletest/downloads/
  (you have to unzip it).

After building RODOS, you can now run all unit tests at once by executing
the command-line tool "ctest" (comes with CMake) in the RODOS build directory.

For selecting certain unit tests, see following excerpt from CTest's manual
page:
"
   -R <regex>, --tests-regex <regex>
          Run tests matching regular expression.

          This option tells ctest to run only the tests whose names match
          the given regular expression.
[...]
   -E <regex>, --exclude-regex <regex>
          Exclude tests matching regular expression.

          This option tells ctest to NOT run the tests whose names match
          the given regular expression.
"
For more infos about the test execution, including detailed failure messages,
look into "<RODOS build dir>/Testing/Temporary/", especially "LastTest.log".


Creating New Unit Tests

1. In our case, we test classes or function groups. So note the
   name of the class or function group you want to test, e. g. "Application".
2. Create a source file for your unit tests in folder "unit_tests" and
   choose "<class or function group name>_unit_tests.cpp" as its name, e. g.
   "Application_unit_tests.cpp". This will be your unit test source file.
3. Take a look at "string_pico_unit_tests.cpp". You can use it as template for
   your own unit test source file.
4. Declare your unit test in "unit_tests/UnitTestList.cmake" (see explanation
   there).
6. You can now run your unit test as explained above

